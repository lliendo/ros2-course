<?xml version="1.0"?>
<robot name="dribot" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="base_radius" value="0.2"/>
  <xacro:property name="base_height" value="0.20"/>
  <xacro:property name="base_mass" value="18"/>

  <xacro:property name="wheel_radius" value="0.075"/>
  <xacro:property name="wheel_width" value="0.03"/>
  <xacro:property name="wheel_mass" value="0.5"/>

  <xacro:property name="wheel_ygap" value="0.01"/>
  <xacro:property name="wheel_zoff" value="${wheel_radius}"/>

  <xacro:property name="base_to_caster" value="0.13"/>

  <xacro:include filename="$(find dribot_description)/urdf/macros.xacro" />
  <xacro:include filename="$(find dribot_description)/urdf/wheel.xacro" />
  <xacro:include filename="$(find dribot_description)/urdf/caster.xacro" />
  <xacro:include filename="$(find dribot_description)/urdf/camera.xacro" />
  <xacro:include filename="$(find dribot_description)/urdf/lidar.xacro" />
  <xacro:include filename="$(find dribot_description)/urdf/imu.xacro" />

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="${base_mass}" r="${base_radius}" h="${base_height}" roll="0"/>
  </link>

  <link name="base_footprint">
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <xacro:wheel prefix="wheel_left" x_pos="0" y_pos="${base_radius+wheel_ygap}" />
  <xacro:wheel prefix="wheel_right" x_pos="0" y_pos="-${base_radius+wheel_ygap}" />
  <xacro:camera_macro parent="base_link" x_pos="${base_radius+0.0125}" y_pos="0" z_pos="${base_height/2-0.025}" />
  <xacro:lidar_macro parent="base_link" x_pos="0" y_pos="0" z_pos="${base_height/2+0.02}" />
  <xacro:imu_macro parent="base_link" x_pos="-0.10" y_pos="0" z_pos="${base_height/2+0.005}" />

  <xacro:caster prefix="caster_front" x_pos="${base_to_caster}"
                radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  <xacro:caster prefix="caster_rear" x_pos="${-base_to_caster}"
                radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>

  <gazebo>
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

      <!-- Make sure the names here match joints specified in our wheel.xacro
           in case of our code they are named `{prefix}_joint`, where prefix
           is declared when we call xacro:wheel. -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- In the two lines below we are using parameters to calculate values
           that we pass into the plugin. -->
      <wheel_separation>${2*base_radius+2*wheel_ygap+2*wheel_width/2}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>

      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>
  </gazebo>

</robot>
